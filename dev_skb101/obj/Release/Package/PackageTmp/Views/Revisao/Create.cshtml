@model dev_skb101.Models.revisao

@{
    ViewBag.Title = "Create";
    if (Session["UserId"] == null)
    {
        Response.Redirect("~/home/login");
    }
}

<h2>Informar uma manutenção em uma bike de aluguel</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>revisao</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.bicicleta_id, "Bicicleta", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("bicicleta_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.bicicleta_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.autor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.autor, new { htmlAttributes = new { @class = "form-control", placeholder = "João Dias"  } })
            @Html.ValidationMessageFor(model => model.autor, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.descricao, new { htmlAttributes = new { @class = "form-control", placeholder = "Troca da ...."  } })
            @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.observacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.TextAreaFor(model => model.observacao, new { cols = 35, @rows = 3, @class="form-control", placeholder = "Precisa fazer...."  }) 
            @Html.ValidationMessageFor(model => model.observacao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dataRevisao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dataRevisao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dataRevisao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Salvar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Retornar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
